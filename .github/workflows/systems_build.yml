name: Build SystemMonitor

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install psutil matplotlib numpy paramiko GPUtil fpdf Pillow

      - name: Build on Linux/macOS
        if: runner.os != 'Windows'
        run: |
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            pyinstaller build_linux.spec --clean
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            pyinstaller build_macos.spec --clean
          fi

      - name: Build on Windows
        if: runner.os == 'Windows'
        run: pyinstaller build_windows.spec --clean
        shell: pwsh

      - name: Package build artifacts
        run: |
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            mkdir -p dist/SystemMonitor-deb/DEBIAN
            mkdir -p dist/SystemMonitor-deb/usr/local/bin/SystemMonitor
            cp -r dist/SystemMonitor/Linux/* dist/SystemMonitor-deb/usr/local/bin/SystemMonitor/
            cat <<EOT > dist/SystemMonitor-deb/DEBIAN/control
Package: systemmonitor
Version: 1.0
Section: utils
Priority: optional
Architecture: amd64
Maintainer: Your Name <you@example.com>
Description: SystemMonitor - System Monitoring Tool
EOT
            dpkg-deb --build dist/SystemMonitor-deb dist/SystemMonitor.deb
            zip -j dist/SystemMonitor-linux.zip dist/SystemMonitor.deb
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            hdiutil create -volname SystemMonitor -srcfolder dist/SystemMonitor/macOS -ov -format UDZO dist/SystemMonitor-macos.dmg
            zip -r dist/SystemMonitor-macos.zip dist/SystemMonitor-macos.dmg
          elif [[ "${{ runner.os }}" == "Windows" ]]; then
            pwsh -c "Compress-Archive -Path dist\SystemMonitor\Windows\* -DestinationPath dist\SystemMonitor-windows.zip"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ runner.os }}
          path: dist/
