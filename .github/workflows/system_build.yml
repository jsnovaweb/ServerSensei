name: Build and Package

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pillow psutil matplotlib numpy paramiko GPUtil fpdf
        shell: bash

      - name: Verify PyInstaller
        run: pyinstaller --version
        shell: bash

      - name: Build application
        run: |
          if [ "${{ runner.os }}" == "macOS" ]; then
            pyinstaller build_macos.spec
          elif [ "${{ runner.os }}" == "Linux" ]; then
            pyinstaller build_linux.spec
          fi
        shell: bash
        if: runner.os != 'Windows'

      - name: Build application on Windows
        run: pyinstaller build_windows.spec
        shell: pwsh
        if: runner.os == 'Windows'

      # -------------------------------
      # Packaging steps
      # -------------------------------
      - name: Package Linux as .deb
        if: runner.os == 'Linux'
        run: |
          mkdir -p package/DEBIAN
          mkdir -p package/usr/local/bin
          cp dist/SystemMonitor/Linux/* package/usr/local/bin/
          echo "Package: systemmonitor" > package/DEBIAN/control
          echo "Version: 1.0.0" >> package/DEBIAN/control
          echo "Architecture: amd64" >> package/DEBIAN/control
          echo "Maintainer: YourName <you@example.com>" >> package/DEBIAN/control
          echo "Description: System Monitor & Optimizer" >> package/DEBIAN/control
          dpkg-deb --build package SystemMonitor.deb
        shell: bash

      - name: Package macOS as .dmg
        if: runner.os == 'macOS'
        run: |
          hdiutil create -volname SystemMonitor -srcfolder dist/SystemMonitor/macOS -ov -format UDZO SystemMonitor.dmg
        shell: bash

      - name: Package Windows as .zip
        if: runner.os == 'Windows'
        run: |
          Compress-Archive -Path dist\SystemMonitor\Windows\* -DestinationPath SystemMonitor.zip
        shell: pwsh

      - name: Upload packaged artifacts
        uses: actions/upload-artifact@v4
        with:
          name: SystemMonitor-${{ runner.os }}
          path: |
            SystemMonitor.deb
            SystemMonitor.dmg
            SystemMonitor.zip

